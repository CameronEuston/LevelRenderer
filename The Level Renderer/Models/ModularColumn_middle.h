// "ModularColumn_middle.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "ModularColumn_middle.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _ModularColumn_middle_version_
const char ModularColumn_middle_version[4] = { '0','1','9','d' };
#define _ModularColumn_middle_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _ModularColumn_middle_vertexcount_
const unsigned ModularColumn_middle_vertexcount = 200;
#define _ModularColumn_middle_vertexcount_
#endif
#ifndef _ModularColumn_middle_indexcount_
const unsigned ModularColumn_middle_indexcount = 324;
#define _ModularColumn_middle_indexcount_
#endif
#ifndef _ModularColumn_middle_materialcount_
const unsigned ModularColumn_middle_materialcount = 2; // can be used for batched draws
#define _ModularColumn_middle_materialcount_
#endif
#ifndef _ModularColumn_middle_meshcount_
const unsigned ModularColumn_middle_meshcount = 2;
#define _ModularColumn_middle_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _ModularColumn_middle_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT ModularColumn_middle_vertices[200] =
{
	{	{ -0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013400f, 0.411600f, 0.911200f }	},
	{	{ -0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023300f, 0.414700f, 0.909600f }	},
	{	{ -0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021300f, 0.414100f, 0.910000f }	},
	{	{ 0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011800f, -0.412500f, -0.910900f }	},
	{	{ 0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011100f, -0.412300f, -0.911000f }	},
	{	{ 0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.014700f, -0.413400f, -0.910400f }	},
	{	{ -0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011800f, -0.412500f, 0.910900f }	},
	{	{ -0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011100f, -0.412300f, 0.911000f }	},
	{	{ -0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.014700f, -0.413400f, 0.910400f }	},
	{	{ -0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011800f, -0.412500f, -0.910900f }	},
	{	{ -0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015500f, -0.413700f, -0.910300f }	},
	{	{ -0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.014700f, -0.413400f, -0.910400f }	},
	{	{ 0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011800f, -0.412500f, 0.910900f }	},
	{	{ 0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.015500f, -0.413700f, 0.910300f }	},
	{	{ 0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.014700f, -0.413400f, 0.910400f }	},
	{	{ -0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.013400f, 0.411600f, -0.911200f }	},
	{	{ -0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011700f, 0.411100f, -0.911500f }	},
	{	{ -0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021300f, 0.414100f, -0.910000f }	},
	{	{ -0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, -0.000000f, -0.999800f }	},
	{	{ 0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, -0.000000f, -0.999800f }	},
	{	{ 0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, -0.000000f, -0.999800f }	},
	{	{ 0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.411600f, 0.911200f }	},
	{	{ 0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011700f, 0.411100f, 0.911500f }	},
	{	{ 0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021300f, 0.414100f, 0.910000f }	},
	{	{ 0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.933600f, 0.358200f }	},
	{	{ -0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933700f, 0.358100f }	},
	{	{ -0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933700f, 0.358100f }	},
	{	{ 0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, 0.435900f }	},
	{	{ -0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, 0.435900f }	},
	{	{ -0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, 0.435900f }	},
	{	{ -0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, -0.435900f }	},
	{	{ 0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, -0.435900f }	},
	{	{ 0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, -0.435900f }	},
	{	{ -0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933700f, -0.358100f }	},
	{	{ 0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.933700f, -0.358200f }	},
	{	{ 0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.933700f, -0.358200f }	},
	{	{ 0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.013400f, 0.411600f, -0.911200f }	},
	{	{ 0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023300f, 0.414700f, -0.909600f }	},
	{	{ 0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021300f, 0.414100f, -0.910000f }	},
	{	{ 0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, -0.000000f, -0.999800f }	},
	{	{ -0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, -0.000000f, -0.999800f }	},
	{	{ -0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, -0.000000f, -0.999800f }	},
	{	{ -0.455395f, -0.188437f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.455395f, -0.188437f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455395f, -0.188437f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.455395f, 0.187835f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ -0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.455395f, 0.187835f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ 0.455395f, -0.188437f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.259215f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.455395f, 0.187835f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ 0.386218f, 0.259215f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ -0.386218f, -0.259478f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ -0.386218f, 0.259215f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ 0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455395f, 0.187835f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.259215f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.386218f, -0.259478f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011700f, 0.411100f, 0.911500f }	},
	{	{ 0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.015500f, -0.413700f, -0.910300f }	},
	{	{ -0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.015500f, -0.413700f, 0.910300f }	},
	{	{ -0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.011100f, -0.412300f, -0.911000f }	},
	{	{ 0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011100f, -0.412300f, 0.911000f }	},
	{	{ -0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023300f, 0.414700f, -0.909600f }	},
	{	{ -0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, 0.000000f, 0.999800f }	},
	{	{ 0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, -0.000000f, -0.999800f }	},
	{	{ 0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.023300f, 0.414700f, 0.909600f }	},
	{	{ 0.386218f, 0.259215f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.933600f, 0.358200f }	},
	{	{ 0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, 0.435900f }	},
	{	{ -0.386218f, -0.259478f, -0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.900000f, -0.435900f }	},
	{	{ -0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.933700f, -0.358100f }	},
	{	{ 0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.011700f, 0.411100f, -0.911500f }	},
	{	{ 0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021800f, 0.000000f, 0.999800f }	},
	{	{ -0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021800f, -0.000000f, -0.999800f }	},
	{	{ 0.455394f, -0.188437f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.455394f, 0.187835f, -0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.718100f, 0.695900f, 0.000000f }	},
	{	{ -0.455394f, -0.188437f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.716400f, -0.697600f, 0.000000f }	},
	{	{ -0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.718100f, 0.695900f, -0.000000f }	},
	{	{ 0.455394f, 0.187835f, 0.206095f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.386218f, 0.259215f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.386218f, -0.259478f, 0.174788f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ -0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ -0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ 0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ 0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ 0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ -0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ 0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, -0.187561f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.351107f, 0.259508f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, 0.755400f }	},
	{	{ 0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.655200f, -0.755400f }	},
	{	{ -0.413995f, 0.187006f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.351107f, -0.259107f, -0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, -0.751100f }	},
	{	{ 0.413995f, -0.187561f, -0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, -0.259107f, 0.351107f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.660200f, 0.751100f }	},
	{	{ -0.413995f, -0.187561f, 0.413995f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ -0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.413995f, 0.187006f, -0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.351107f, 0.259508f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.351107f, -0.259107f, -0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.751100f, -0.660200f, 0.000000f }	},
	{	{ 0.351107f, 0.259508f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.755400f, 0.655200f, -0.000000f }	},
	{	{ -0.413995f, 0.187006f, 0.206998f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.351107f, -0.259107f, 0.175554f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751100f, -0.660200f, 0.000000f }	},
};
#define _ModularColumn_middle_vertices_
#endif
#ifndef _ModularColumn_middle_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int ModularColumn_middle_indices[324] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 23,
	 24, 25, 26,
	 27, 28, 29,
	 30, 31, 32,
	 33, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 42, 43, 44,
	 45, 46, 47,
	 48, 49, 50,
	 51, 52, 53,
	 54, 55, 56,
	 57, 58, 59,
	 60, 61, 62,
	 63, 64, 65,
	 66, 67, 68,
	 69, 70, 71,
	 51, 72, 73,
	 74, 54, 75,
	 76, 77, 59,
	 48, 78, 79,
	 80, 81, 62,
	 82, 63, 83,
	 84, 66, 85,
	 86, 71, 87,
	 0, 2, 88,
	 3, 5, 89,
	 6, 8, 90,
	 9, 11, 91,
	 12, 14, 92,
	 15, 17, 93,
	 18, 20, 94,
	 21, 23, 95,
	 24, 26, 96,
	 27, 29, 97,
	 30, 32, 98,
	 33, 35, 99,
	 36, 38, 100,
	 39, 41, 101,
	 42, 44, 102,
	 45, 47, 103,
	 48, 50, 78,
	 51, 53, 72,
	 54, 56, 75,
	 57, 59, 77,
	 60, 62, 81,
	 63, 65, 83,
	 66, 68, 85,
	 69, 71, 86,
	 51, 73, 104,
	 74, 75, 105,
	 76, 59, 106,
	 48, 79, 107,
	 80, 62, 108,
	 82, 83, 109,
	 84, 85, 110,
	 86, 87, 111,
	 112, 113, 114,
	 115, 116, 117,
	 118, 119, 120,
	 121, 122, 123,
	 124, 125, 126,
	 127, 128, 129,
	 130, 131, 132,
	 133, 134, 135,
	 136, 137, 138,
	 139, 140, 141,
	 142, 143, 144,
	 145, 146, 147,
	 148, 149, 150,
	 151, 152, 153,
	 154, 155, 156,
	 157, 158, 159,
	 160, 161, 162,
	 163, 164, 165,
	 166, 167, 168,
	 169, 170, 171,
	 172, 173, 174,
	 175, 176, 177,
	 112, 114, 178,
	 115, 117, 179,
	 118, 120, 180,
	 121, 123, 181,
	 124, 126, 182,
	 127, 129, 183,
	 130, 132, 184,
	 133, 135, 185,
	 136, 138, 186,
	 139, 141, 187,
	 142, 144, 188,
	 145, 147, 189,
	 148, 150, 190,
	 151, 153, 191,
	 154, 156, 192,
	 157, 159, 193,
	 160, 162, 194,
	 163, 165, 195,
	 166, 168, 196,
	 169, 171, 197,
	 172, 174, 198,
	 175, 177, 199,
};
#define _ModularColumn_middle_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _ModularColumn_middle_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL ModularColumn_middle_materials[2] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078423f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock.006",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.510617f, 0.510617f, 0.510617f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078423f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"RockLight.001",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _ModularColumn_middle_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _ModularColumn_middle_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int ModularColumn_middle_batches[2][2] =
{
	{ 192, 0 },
	{ 132, 192 },
};
#define _ModularColumn_middle_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _ModularColumn_middle_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH ModularColumn_middle_meshes[2] =
{
	{
		"default",
		192,
		0,
		0,
	},
	{
		"default",
		132,
		192,
		1,
	},
};
#define _ModularColumn_middle_meshes_
#endif
