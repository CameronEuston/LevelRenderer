// "Entrance.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Entrance.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Entrance_version_
const char Entrance_version[4] = { '0','1','9','d' };
#define _Entrance_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Entrance_vertexcount_
const unsigned Entrance_vertexcount = 180;
#define _Entrance_vertexcount_
#endif
#ifndef _Entrance_indexcount_
const unsigned Entrance_indexcount = 312;
#define _Entrance_indexcount_
#endif
#ifndef _Entrance_materialcount_
const unsigned Entrance_materialcount = 1; // can be used for batched draws
#define _Entrance_materialcount_
#endif
#ifndef _Entrance_meshcount_
const unsigned Entrance_meshcount = 1;
#define _Entrance_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Entrance_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Entrance_vertices[180] =
{
	{	{ 0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161141f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ -0.161141f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161141f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161141f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, -1.636703f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161141f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161141f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161141f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 0.453882f, 0.999999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161141f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, -1.636703f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, -0.000000f, -0.000000f }	},
	{	{ -0.161141f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161141f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, -1.636703f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, -1.636703f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 0.442194f, -0.765774f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.161141f, -1.636702f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161141f, -1.636702f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, 1.319907f, 0.499999f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 1.453882f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 0.953882f, 0.866025f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 0.453882f, -1.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 0.953882f, -0.866027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 1.319908f, -0.500001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 0.825080f, 0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 1.105372f, -0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 1.105372f, 0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 0.825080f, -0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 0.442194f, 0.765771f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.161142f, 1.207966f, -0.000001f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, -1.636703f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
};
#define _Entrance_vertices_
#endif
#ifndef _Entrance_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Entrance_indices[312] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 2,
	 17, 18, 19,
	 20, 21, 16,
	 18, 0, 22,
	 23, 8, 21,
	 24, 17, 25,
	 26, 27, 28,
	 29, 30, 31,
	 32, 33, 34,
	 35, 36, 37,
	 38, 39, 40,
	 41, 42, 43,
	 44, 45, 46,
	 47, 48, 49,
	 50, 51, 52,
	 53, 54, 55,
	 56, 57, 58,
	 59, 60, 61,
	 62, 63, 64,
	 65, 66, 67,
	 68, 69, 70,
	 71, 72, 73,
	 74, 75, 76,
	 77, 78, 79,
	 80, 81, 82,
	 83, 84, 85,
	 86, 72, 71,
	 87, 88, 89,
	 90, 86, 91,
	 92, 73, 88,
	 78, 90, 93,
	 94, 89, 95,
	 96, 97, 98,
	 99, 100, 101,
	 102, 103, 104,
	 105, 106, 107,
	 108, 109, 110,
	 111, 112, 113,
	 114, 115, 116,
	 117, 118, 119,
	 120, 121, 122,
	 123, 124, 125,
	 126, 127, 128,
	 129, 130, 131,
	 132, 133, 134,
	 135, 136, 137,
	 138, 139, 140,
	 0, 2, 22,
	 3, 5, 141,
	 6, 8, 23,
	 9, 11, 142,
	 12, 14, 143,
	 15, 2, 1,
	 17, 19, 25,
	 20, 16, 15,
	 18, 22, 19,
	 23, 21, 20,
	 24, 25, 144,
	 26, 28, 145,
	 29, 31, 146,
	 32, 34, 147,
	 35, 37, 148,
	 38, 40, 149,
	 41, 43, 150,
	 44, 46, 151,
	 47, 49, 152,
	 50, 52, 153,
	 53, 55, 154,
	 56, 58, 155,
	 59, 61, 156,
	 62, 64, 157,
	 65, 67, 158,
	 68, 70, 159,
	 71, 73, 92,
	 74, 76, 160,
	 77, 79, 161,
	 80, 82, 162,
	 83, 85, 163,
	 86, 71, 91,
	 87, 89, 94,
	 90, 91, 93,
	 92, 88, 87,
	 78, 93, 79,
	 94, 95, 164,
	 96, 98, 165,
	 99, 101, 166,
	 102, 104, 167,
	 105, 107, 168,
	 108, 110, 169,
	 111, 113, 170,
	 114, 116, 171,
	 117, 119, 172,
	 120, 122, 173,
	 123, 125, 174,
	 126, 128, 175,
	 129, 131, 176,
	 132, 134, 177,
	 135, 137, 178,
	 138, 140, 179,
};
#define _Entrance_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Entrance_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Entrance_materials[1] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078423f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock.003",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Entrance_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Entrance_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Entrance_batches[1][2] =
{
	{ 312, 0 },
};
#define _Entrance_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Entrance_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Entrance_meshes[1] =
{
	{
		"default",
		312,
		0,
		0,
	},
};
#define _Entrance_meshes_
#endif
